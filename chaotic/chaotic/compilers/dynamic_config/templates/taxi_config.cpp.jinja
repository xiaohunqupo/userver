/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */
{% if libname %}
#include <taxi_config/{{ libname }}/taxi_config.hpp>
{% else %}
#include <taxi_config/taxi_config.hpp>
{% endif %}

{# Please put new static includes *inside* this header #}
#include <codegen/impl/bundles/dynamic_config/taxi_config_definitions.hpp>

namespace taxi_config{% if libname %}::{{ libname.replace('-', '_') }}{% endif %} {

namespace {

TaxiConfig ParseTaxiConfig(const dynamic_config::DocsMap& docs_map) {
  return TaxiConfig{
{% for name in variables -%}
    .{{ name | lower }} = {{ name }}.Parse(docs_map),
{% endfor %}
  };
}

}  // namespace

const auto TaxiConfig::kDeprecatedKey = codegen::MakeDependentDynamicConfig(
    ParseTaxiConfig,
    codegen::DefaultFromConfigs{
{% for name in variables -%}
        {{ name }},
{% endfor %}
    }
);

}  // namespace

